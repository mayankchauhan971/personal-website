---
const { title, description = "Personal website showcasing my journey and writings as a software engineer" } = Astro.props;

// Get current page for navigation active state
const pathname = Astro.url.pathname;
const currentPage = pathname === '/' ? 'home' : 
                   pathname.startsWith('/about') ? 'about' : 
                   pathname.startsWith('/articles') ? 'articles' : 'home';
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,400;0,500;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 dark:bg-slate-900 text-gray-900 dark:text-gray-100 font-mono transition-colors duration-200">
    <nav class="border-b border-gray-200 dark:border-slate-700 bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm transition-colors duration-200">
      <div class="max-w-6xl mx-auto px-6 py-6">
        <div class="flex justify-between items-center">
          <div class="flex space-x-8">
            <a 
              href="/" 
              class={`nav-link text-lg font-medium hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative pb-1 ${
                currentPage === 'home' ? 'active text-gray-900 dark:text-gray-100' : 'text-gray-600 dark:text-gray-400'
              }`}
            >
              Home
            </a>
            <a 
              href="/about" 
              class={`nav-link text-lg font-medium hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative pb-1 ${
                currentPage === 'about' ? 'active text-gray-900 dark:text-gray-100' : 'text-gray-600 dark:text-gray-400'
              }`}
            >
              About
            </a>
            <a 
              href="/articles" 
              class={`nav-link text-lg font-medium hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative pb-1 ${
                currentPage === 'articles' ? 'active text-gray-900 dark:text-gray-100' : 'text-gray-600 dark:text-gray-400'
              }`}
            >
              Articles
            </a>
          </div>
          
          <!-- Theme Toggle -->
          <button 
            id="theme-toggle"
            class="p-2 rounded-lg bg-gray-100 dark:bg-slate-800 hover:bg-gray-200 dark:hover:bg-slate-700 transition-colors duration-200"
            aria-label="Toggle dark mode"
          >
            <!-- Sun icon for dark mode -->
            <svg id="sun-icon" class="w-5 h-5 text-gray-900 dark:text-yellow-400 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
            </svg>
            <!-- Moon icon for light mode -->
            <svg id="moon-icon" class="w-5 h-5 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
            </svg>
          </button>
        </div>
      </div>
    </nav>
    
    <main class="min-h-screen">
      <slot />
    </main>
    
    <footer class="border-t border-gray-200 dark:border-slate-700 py-8 mt-16 bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm transition-colors duration-200">
      <div class="max-w-6xl mx-auto px-6 text-center text-gray-600 dark:text-gray-400">
        <p>&copy; 2024 Personal Website. Built with Astro and Tailwind CSS.</p>
      </div>
    </footer>
  </body>
</html>

<style>
  html {
    font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', 'Monaco', monospace;
  }
  
  /* Navigation active state */
  .nav-link.active {
    @apply text-gray-900 dark:text-gray-100;
  }
  
  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    right: 0;
    height: 2px;
    background-color: #374151;
  }
  
  .dark .nav-link.active::after {
    background-color: #f3f4f6;
  }
</style>

<script>
  // Theme toggle functionality
  function initTheme() {
    const themeToggle = document.getElementById('theme-toggle');
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');
    const html = document.documentElement;
    
    // Check for saved theme preference or default to dark
    const savedTheme = localStorage.getItem('theme') || 'dark';
    html.setAttribute('data-theme', savedTheme);
    
    // Update icon visibility
    if (savedTheme === 'dark') {
      html.classList.add('dark');
      sunIcon?.classList.remove('hidden');
      moonIcon?.classList.add('hidden');
    } else {
      html.classList.remove('dark');
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
    }
    
    // Theme toggle click handler
    themeToggle?.addEventListener('click', () => {
      const currentTheme = html.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      // Update HTML attributes and classes
      html.setAttribute('data-theme', newTheme);
      html.classList.toggle('dark');
      
      // Update icon visibility
      sunIcon?.classList.toggle('hidden');
      moonIcon?.classList.toggle('hidden');
      
      // Save preference
      localStorage.setItem('theme', newTheme);
    });
  }
  
  // Initialize theme when DOM is loaded
  document.addEventListener('DOMContentLoaded', initTheme);
</script>
