---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}

const article = Astro.props;
const { Content } = await article.render();

// Get related articles (same category, excluding current article)
const allArticles = await getCollection('articles');
const relatedArticles = allArticles
  .filter(a => a.data.category === article.data.category && a.slug !== article.slug)
  .slice(0, 3);
---

<BaseLayout title={article.data.title} description={article.data.summary}>
  <article class="max-w-4xl mx-auto px-6 py-16">
    <!-- Article Header -->
    <header class="mb-12">
      <!-- Category and Featured Badge -->
      <div class="flex items-center gap-3 mb-6">
        <span class={`px-3 py-1 text-sm font-medium rounded-full ${
          article.data.category === 'tech' ? 'text-blue-300 bg-blue-500/20' :
          article.data.category === 'product' ? 'text-green-300 bg-green-500/20' :
          article.data.category === 'curiosity' ? 'text-orange-300 bg-orange-500/20' :
          'text-purple-300 bg-purple-500/20'
        }`}>
          {article.data.category.charAt(0).toUpperCase() + article.data.category.slice(1)}
        </span>
        {article.data.featured && (
          <span class="bg-yellow-400 text-slate-900 px-3 py-1 text-sm font-bold rounded">
            ⭐ Featured
          </span>
        )}
      </div>
      
      <!-- Title -->
      <h1 class="text-3xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 leading-tight font-mono">
        {article.data.title}
      </h1>
      
      <!-- Summary -->
      <p class="text-xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed">
        {article.data.summary}
      </p>
      
      <!-- Metadata -->
      <div class="flex flex-col md:flex-row gap-4 text-gray-500 dark:text-gray-400 text-sm">
        {article.data.date && (
          <time datetime={article.data.date} class="flex items-center">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {new Date(article.data.date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        )}
        
        {article.data.tags && (
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z"></path>
            </svg>
            <div class="flex flex-wrap gap-2">
              {article.data.tags.map(tag => (
                <span class="px-2 py-1 text-xs bg-gray-200 dark:bg-slate-700 text-gray-700 dark:text-gray-300 rounded">
                  #{tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>
    </header>

    <!-- Article Content -->
    <div class="prose prose-lg max-w-none mb-16">
      <Content />
    </div>

    <!-- Social Sharing -->
    <footer class="border-t border-gray-300 dark:border-slate-700 pt-8 mb-16">
      <div class="text-center">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 font-mono">Share this article</h3>
        <div class="flex justify-center space-x-4">
          <a 
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(article.data.title)}&url=${encodeURIComponent(Astro.url.toString())}`}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 py-2 bg-gray-200 dark:bg-slate-700 border border-gray-300 dark:border-slate-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-600 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
            Twitter
          </a>
          
          <a 
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 py-2 bg-gray-200 dark:bg-slate-700 border border-gray-300 dark:border-slate-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-600 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
            LinkedIn
          </a>
        </div>
      </div>
    </footer>
  </article>

  <!-- Related Articles -->
  {relatedArticles.length > 0 && (
    <section class="max-w-6xl mx-auto px-6 pb-16">
      <div class="border-t border-gray-300 dark:border-slate-700 pt-16">
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white text-center mb-12 font-mono">Related Articles</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedArticles.map(relatedArticle => (
            <article class="bg-gray-100 dark:bg-slate-800/60 border border-gray-300 dark:border-slate-600 rounded-lg p-6 hover:bg-gray-200 dark:hover:bg-slate-700 transition-colors">
              <div class="mb-4">
                <span class={`inline-block px-3 py-1 text-sm font-medium rounded-full ${
                  relatedArticle.data.category === 'tech' ? 'text-blue-300 bg-blue-500/20' :
                  relatedArticle.data.category === 'product' ? 'text-green-300 bg-green-500/20' :
                  'text-purple-300 bg-purple-500/20'
                }`}>
                  {relatedArticle.data.category.charAt(0).toUpperCase() + relatedArticle.data.category.slice(1)}
                </span>
              </div>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
                <a href={`/articles/${relatedArticle.slug}`} class="hover:text-orange-600 dark:hover:text-yellow-400 transition-colors">
                  {relatedArticle.data.title}
                </a>
              </h3>
              <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
                {relatedArticle.data.summary}
              </p>
              <div class="flex justify-between items-center text-sm text-gray-500 dark:text-gray-400">
                {relatedArticle.data.date && (
                  <time datetime={relatedArticle.data.date}>
                    {new Date(relatedArticle.data.date).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </time>
                )}
                <a 
                  href={`/articles/${relatedArticle.slug}`}
                  class="text-orange-600 dark:text-yellow-400 hover:text-orange-700 dark:hover:text-yellow-300 font-medium"
                >
                  Read more →
                </a>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Back to Articles -->
  <div class="max-w-4xl mx-auto px-6 text-center pb-16">
    <a 
      href="/articles"
      class="inline-flex items-center px-6 py-3 border border-gray-300 dark:border-slate-600 rounded-lg text-gray-700 dark:text-gray-300 hover:border-orange-500 dark:hover:border-yellow-400 hover:text-orange-600 dark:hover:text-yellow-400 transition-colors font-medium"
    >
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      Back to All Articles
    </a>
  </div>
</BaseLayout>

<style>
  /* Custom prose styles for light and dark theme article formatting */
  .prose {
    @apply text-gray-700 dark:text-gray-300;
  }
  
  .prose h2 {
    @apply text-2xl font-bold text-gray-900 dark:text-white mt-12 mb-6 font-mono;
  }
  
  .prose h3 {
    @apply text-xl font-semibold text-gray-900 dark:text-white mt-8 mb-4 font-mono;
  }
  
  .prose h4 {
    @apply text-lg font-semibold text-gray-900 dark:text-white mt-6 mb-3 font-mono;
  }
  
  .prose p {
    @apply mb-6 leading-relaxed text-gray-700 dark:text-gray-300;
  }
  
  .prose pre {
    @apply bg-gray-100 dark:bg-slate-800/60 border border-gray-300 dark:border-slate-600 text-gray-800 dark:text-gray-100 rounded-lg p-4 overflow-x-auto;
  }
  
  .prose code {
    @apply bg-gray-100 dark:bg-slate-800/60 text-orange-600 dark:text-yellow-300 px-2 py-1 rounded text-sm font-mono;
  }
  
  .prose pre code {
    @apply bg-transparent text-gray-800 dark:text-gray-100 p-0;
  }
  
  .prose blockquote {
    @apply border-l-4 border-orange-500 dark:border-yellow-400 pl-6 italic text-gray-600 dark:text-gray-400 my-8 bg-gray-50 dark:bg-slate-800/50 py-4 rounded-r;
  }
  
  .prose ul, .prose ol {
    @apply mb-6 pl-6;
  }
  
  .prose li {
    @apply mb-2 text-gray-700 dark:text-gray-300;
  }
  
  .prose strong {
    @apply text-gray-900 dark:text-white;
  }
  
  .prose a {
    @apply text-orange-600 dark:text-yellow-400 hover:text-orange-700 dark:hover:text-yellow-300 underline decoration-dotted underline-offset-2;
  }
  
  .prose table {
    @apply w-full border-collapse border border-gray-300 dark:border-slate-600 my-6;
  }
  
  .prose th {
    @apply border border-gray-300 dark:border-slate-600 bg-gray-100 dark:bg-slate-800/60 text-gray-900 dark:text-white p-3 font-semibold;
  }
  
  .prose td {
    @apply border border-gray-300 dark:border-slate-600 p-3 text-gray-700 dark:text-gray-300;
  }
  
  .prose hr {
    @apply border-gray-300 dark:border-slate-600 my-8;
  }
</style>