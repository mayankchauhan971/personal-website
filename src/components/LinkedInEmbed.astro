---
// LinkedIn Embed Component
// This component handles embedding LinkedIn posts using iframe approach
export interface Props {
  postUrl: string;
  title?: string;
  description?: string;
  className?: string;
}

const { postUrl, title = "LinkedIn Post", description, className = "" } = Astro.props;

// Extract post ID from LinkedIn URL for embedding
function getLinkedInEmbedUrl(url) {
  // LinkedIn post URLs typically look like:
  // https://www.linkedin.com/posts/username_activity-1234567890-abcd
  if (url.includes('/posts/')) {
    return `${url}?utm_source=share&utm_medium=member_desktop`;
  }
  return url;
}

const embedUrl = getLinkedInEmbedUrl(postUrl);
---

<div class={`linkedin-embed-container ${className}`}>
  <div class="border border-gray-200 rounded-lg overflow-hidden bg-white">
    <!-- Header -->
    <div class="bg-blue-600 text-white p-4">
      <div class="flex items-center">
        <svg class="w-6 h-6 mr-3" fill="currentColor" viewBox="0 0 24 24">
          <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
        </svg>
        <h3 class="font-semibold">{title}</h3>
      </div>
      {description && (
        <p class="text-blue-100 text-sm mt-2">{description}</p>
      )}
    </div>
    
    <!-- Content Area -->
    <div class="p-6">
      <div class="bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
        <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.102m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
        </svg>
        <h4 class="text-lg font-semibold text-gray-700 mb-2">LinkedIn Content</h4>
        <p class="text-gray-500 mb-4">
          LinkedIn content will be displayed here when proper embedding is configured.
        </p>
        <a 
          href={embedUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          View on LinkedIn
          <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>

<!-- 
  Note: LinkedIn doesn't provide a direct iframe embedding option for personal posts.
  For actual implementation, you would need to:
  
  1. Use LinkedIn's oEmbed API (requires app registration)
  2. Use a third-party service like Embed.ly or iFramely
  3. Manually curate LinkedIn content as regular articles
  4. Use LinkedIn's official embed.js (limited functionality)
  
  This component provides the structure for when you implement one of these solutions.
-->

<style>
  .linkedin-embed-container {
    max-width: 100%;
  }
  
  @media (max-width: 768px) {
    .linkedin-embed-container {
      margin: 0 -1rem;
    }
  }
</style>
